package myarchive;

import wsiarchive.*;

// nichtleere Liste von Archiven

public class PairArchiveList implements IArchiveList {
    private IArchive first;
    private IArchiveList rest;
    
    public PairArchiveList(IArchive first, IArchiveList rest) {
        this.first = first;
        this.rest = rest;
    }
    
    // Gets
    public IArchive getFirst () { return this.first; }
    public IArchiveList getRest () { return this.rest; }
    
    
    // Methode f√ºr Overflow: put
    // Effekt: Journal updaten
    public IPutResult overflowPut (Item item, IArchive current) {
        IPutResult put = this.first.put(item);
        
        // Rekursion
        if (put instanceof FullPutResult && this.rest instanceof PairArchiveList) {
            return this.rest.overflowPut(item, current);
            
        // Journal updaten
        } else if (put instanceof OKPutResult) {
            //Journal newJournal = new Journal( ((OKPutResult) put).getId(), this.first);
            //journal.add(((OKPutResult) put).getId(), this.first);
            current.addJournal(((OKPutResult) put).getId(), this.first);
        }
        
        return put;
    }
}
